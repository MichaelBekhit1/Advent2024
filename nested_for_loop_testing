# testing comprehension of nested for loops and multidimensional arrays for the sake of the aoc tasks that involve those
import itertools

dummy_list = [1,2,3,4,5] # length 5
dummy_list2 = ["a","b","c","d"] # length 4
dummy_list3 = [1,2,5,6,7,3,4] # length 8
dummy_array = [dummy_list, dummy_list2,dummy_list3] # length 17


row_length = len(dummy_list)
col_length = len(dummy_array)

# print(row_length, col_length)
# > 5 3

for i in range(col_length):
    for j in range(row_length):
        print(i,j)
        
# >
# 0 0
# 0 1
# 0 2
# 0 3
# 0 4
# 1 0
# 1 1
# 1 2
# 1 3
# 1 4
# 2 0
# 2 1
# 2 2
# 2 3
# 2 4
# 15 outputs

cols = []
for i, row in enumerate(dummy_array):
    cols.append(i)
    

# >
#   0 [1, 2, 3, 4, 5]
#   1 ['a', 'b', 'c', 'd']
#   2 [1, 2, 5, 6, 7, 3, 4]

for col, row in zip(cols, dummy_array):
    print(col,row)

# >
#   0 [1, 2, 3, 4, 5]
#   1 ['a', 'b', 'c', 'd']
#   2 [1, 2, 5, 6, 7, 3, 4]

for i in itertools.product(cols, dummy_array):
    # print(i)
    # print(i[0], i[1])
    pass
# >
# (0, [1, 2, 3, 4, 5])
# (0, ['a', 'b', 'c', 'd'])
# (0, [1, 2, 5, 6, 7, 3, 4])
# (1, [1, 2, 3, 4, 5])
# (1, ['a', 'b', 'c', 'd'])
# (1, [1, 2, 5, 6, 7, 3, 4])
# (2, [1, 2, 3, 4, 5])
# (2, ['a', 'b', 'c', 'd'])
# (2, [1, 2, 5, 6, 7, 3, 4])